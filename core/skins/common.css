
/* --------------------------------------------------------------------------
	This file can be included at the beginning of any compiled CSS file,
	it won't add to its size until you start using its contents.

	Consider it as a library of sorts. It's the ideal place to put virtual
	selectors and useful variables, so this is what we'll be doing.

	NOTE: avoid including url() files here, prefer raw-url() instead!
-------------------------------------------------------------------------- */

// A common inline-block hack (for old IE compatibility.)
@mixin .inline-block($vertical_align = middle)

	display: inline-block
	@if "$vertical_align"
		vertical-align: $vertical_align
	@endif

	// IE6/7 need layout to enable inline-block on a block element... And a default right margin, from my experience.
	@if ie[-7]
		margin-right: 6px
		zoom: 1

		// ...And they also need inline-block to be reset to inline separately... How annoying.
		// (The & trick forces the selector to be closed and reopened.)
		&
			display: inline
	@endif

// A descriptive style
.plainbox virtual
	padding: .5em 1em
	font-size: .9em
	line-height: 1.4em
	border: 1px solid #bbb
	background-color: #f0f5f0
	margin: .2em 1px 1em
	border-radius: 4px

// A common header (e.g. alert box)
.wehead virtual
	background-color: #e2e8d8
	a
		color: #444

// A common footer (e.g. alert box)
.wefoot virtual extends .wehead
	background-color: #e5e5e8

// A common clearfix hack for float parents, in case setting overflow: hidden on the parent isn't enough for you.
.clearfix
	:after
		content: ""
		display: table
		clear: both
	@if ie[-7]
		zoom: 1
		:before
			content: ""
			display: table
	@endif

.vertical-arrow virtual
	:after
		opacity: .4
		font: .66em/1 Arial
		vertical-align: .12em
		content: "\a0\a0\25bc"
	&:hover:after
		opacity: 1
		transition: opacity .5s

.horizontal-arrow virtual
	:after
		opacity: .4
		font: .66em/1 Arial
		vertical-align: .12em
		content: "\a0\a0\25ba"
	&:hover:after
		opacity: 1
		transition: opacity .5s

// Mix this with your buttons if you provide an icon for them.
.button-padding virtual
	padding-left: @is (firefox, 21px, 23px)

.loading virtual
	mixin: .inline-block
	// All the cool kids get a CSS spinner.
	@if $can_animate
		width, height: 11px
		border-radius: 100%
		border: 1px solid rgba(0,0,0,0.5)
		border-top-color: transparent
		box-shadow: 1px 1px 7px #777
		animation: spin 1s infinite linear
	@else
		width, height: 14px
		background-image: url($images/wheel.gif)
		background-repeat: no-repeat
	@endif

// Mix this into any selector to enable hardware acceleration on it. Hopefully.
.hardware virtual
	transform: translate3d(0, 0, 0)
	backface-visibility: hidden

/* Common and helper variables.
------------------------------------------------------- */

/*
	- They can be put anywhere, they'll be considered as globals.
	- They can contain other variables in their definition.
	- They can easily be rewritten later in any CSS file. For 100% accuracy,
	  do it in a 'common.global.css' or 'common.local.css' file.
	- Enjoy.
*/

/* A generic font stack for display purposes (titles, large text...) */
$generic_stack = "Franklin Gothic Medium", "Franklin Gothic", "Segoe UI", Helvetica, Arial, sans-serif
@if ios // Helvetica Light looks good on my iPod.
	$generic_stack = HelveticaNeue-Light, "Helvetica Neue Light", "Helvetica Neue", Helvetica, sans-serif
@endif

$main_font = Arial, sans-serif
$main_font_size = 88%/130%
$menu_font = $main_font
$big_font = $generic_stack
$head_font = $generic_stack

$subject_font = $generic_stack
$mono_font = Consolas, "Dejavu Sans Mono", Menlo, "Lucida Console", "Courier New", monospace
$serif_font = Georgia, serif

$post_font_size = 100%/133%
$post_font = $main_font
$blog_font_size = 100%/140%
$blog_font = $post_font

$main_bg = #fff
$head_bg = luma(#e3e0da, -3%)
$reddish = #c60
$menu_border = rgba(220, 224, 220, .95)
$menu_gradient =	@is (ie[-8], "average", "linear-gradient")(rgba(232, 236, 232, .96), rgba(255, 255, 255, .96))
$sidebar-width =	@is (webkit, "282px", "280px") // Webkit screws up on padding/border in table mode
$max-width =		@is (ie6, "width", "max-width")

/* .windowbg classes are used to alternate colors between general blocks. */
$window_bg = luma($window_bg2, -3%) // luma(#e3e0d0, +13%) // #f2f3ea // #f9f6f0
$window_bg2 = #f8faf8 // luma(#e3e0d0, +11%) // luma(hue($main_bg, -20), -.5%) // #f3f7f3 // transparent
$window_bg3 = #f0f0f0
$board_col = #d97b33

/* The .msg class should, by default, alternate between these two colors. */
$post_bg = #f2f3ee
$post_bg2 = #f3f7f3

/* float: $left will return float: right on RTL setups. */
$left = @is (rtl, right, left)
$right = @is (rtl, left, right)

/* Should we have border-radius around page corners..? Set to 0 to disable. */
$radius = 8px

/* Something one can remove to make more space in responsive mode... */
$horizontal_content_padding = 30px

/* helper var for vmin. Keep using non-vmin fallbacks, though! */
$vmin = @is (ie9, vm, vmin)

/* Maximum window width for the browser to trigger the low-res responsive CSS mode. */
$responsive_max_width = 1000px
$responsive = "all and (max-width: $responsive_max_width)"

/* List of browsers that support the STANDARD flexbox model, i.e. display: flex.
	IE10 supports an older model, but Wess automatically rewrites your CSS for it.
	For reference, browsers supporting the OLD, useless model were: (firefox[2-], chrome[4-], safari[3.1-] && !ios, ios[3.2-]) */
$can_flex = @is ("firefox[22-], opera[12.1-], chrome[27-], ie[10-], safari[7-]")

/* List browsers that support CSS3 animations (Wedge adds prefixes automatically.) */
$can_animate = @is ("chrome, firefox[5-], opera[12-], ie[10-], safari[4-], ios[3.2-], android[2.1-]")

/* List browsers that support CSS filters (not the old IE ones!). Note that Firefox[3.5-] supports filter: url() with SVG filters. */
$can_filter = @is ("chrome[18-], safari[6-]")

/* List browsers that support position: sticky. iOS needs a prefix, others do not. Firefox 27+, Chrome and Opera Blink support it as of Jan 2014, but through a flag. */
$can_sticky = @is ("ios[6-], firefox[27-]")
